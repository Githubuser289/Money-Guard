{"version":3,"file":"static/js/111.0a159105.chunk.js","mappings":"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","sources":["components/Chart/Chart.styled.js","components/Chart/Chart.jsx","components/StatisticsDashboard/StatisticsDashboard.styled.js","components/StatisticsDashboard/StatisticsDashboard.jsx","components/StatisticsTable/StatisticsTable.styled.js","components/StatisticsTable/StatisticsTable.jsx","pages/StatisticsTab/StatisticsTab.styled.js","pages/StatisticsTab/StatisticsTab.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ChartContainer = styled.div`\n  width: 100%;\n  padding-bottom: 12px;\n\n  @media (min-width: 1280px) {\n    padding-left: 84px;\n  }\n\n  @media (min-width: 768px) {\n    padding-left: 33px;\n    padding-bottom: 152px;\n  }\n`;\n\nexport const StatisticsTitle = styled.h2`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 30px;\n  color: #fbfbfb;\n  padding-bottom: 8px;\n  padding-top: 8px;\n`;\n\nexport const ChartWrapper = styled.div`\n  width: 280px;\n  height: 280px;\n  position: relative;\n`;\n\nexport const ExpenseSummary = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  font-size: 18px;\n  font-family: 'Poppins-SemiBold', sans-serif;\n  color: var(--white);\n`;\n\nexport const ExpenseTotal = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  font-size: 18px;\n  font-family: 'Poppins-SemiBold', sans-serif;\n  color: white;\n`;\n","import { Chart as ChartJS, registerables } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport { selectSummary } from '../../redux/selectors';\nimport {\n  ChartContainer,\n  ChartWrapper,\n  ExpenseTotal,\n  StatisticsTitle,\n} from './Chart.styled';\n\nChartJS.register(...registerables);\n\nexport const coloredCategoriesMap = new Map([\n  ['Entertainment', '#ff85d2'],\n  ['Car', 'rgb(255, 104, 109)'],\n  ['Products', 'rgb(255, 157, 137)'],\n  ['Main expenses', 'rgb(254, 208, 87)'],\n  ['Leisure', 'rgb(91, 255, 167)'],\n  ['Other expenses', 'rgb(0, 173, 95)'],\n  ['Education', 'rgb(115, 222, 255)'],\n  ['Self care', 'rgb(170, 154, 255)'],\n  ['Child care', 'rgb(87, 101, 255)'],\n  ['Household products', 'rgb(114, 61, 239)'],\n]);\n\nexport default function Chart() {\n  const summary = useSelector(selectSummary);\n\n  const periodSummary = summary.categoriesSummary\n    ? summary.categoriesSummary\n        .filter(category => category.type === 'EXPENSE')\n        .map(category => ({\n          ...category,\n          color: coloredCategoriesMap[category.name] || '#000000',\n        }))\n        .sort((a, b) => a.total - b.total)\n    : [];\n  const data = {\n    datasets: [\n      {\n        data: periodSummary.map(expense => expense.total),\n        backgroundColor: periodSummary.map(expense => expense.color),\n        boxShadow: '0px 0px 8px 0px #000 inset',\n      },\n    ],\n  };\n\n  const noData = {\n    datasets: [\n      {\n        data: [0.0000000001],\n        backgroundColor: ['rgba(200, 200, 200, 0.5)'],\n        borderWidth: 0,\n      },\n    ],\n  };\n  const options = {\n    cutout: '70%',\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n  };\n\n  const expenseTotal = summary.expenseSummary || 0;\n\n  return (\n    <>\n      <ChartContainer>\n        <StatisticsTitle>Statistics</StatisticsTitle>\n        <ChartWrapper>\n          <Doughnut\n            data={periodSummary.length ? data : noData}\n            options={options}\n          />\n          <ExpenseTotal>₴ {expenseTotal.toFixed(2)}</ExpenseTotal>\n        </ChartWrapper>\n      </ChartContainer>\n    </>\n  );\n}\n","import styled from 'styled-components';\nexport const DashboardContainer = styled.div`\n  display: flex;\n  margin-bottom: 20px;\n  width: 100%;\n  flex-direction: column;\n  @media (min-width: 768px) {\n    margin-right: 20px;\n  }\n  @media (min-width: 1280px) {\n    margin-left: 30px;\n  }\n`;\n\nexport const SelectContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  padding-top: 10px;\n  align-items: center;\n  @media (min-width: 768px) {\n    &.tablet {\n      flex-direction: row;\n      margin-right: 10px;\n    }\n  }\n  @media (min-width: 1280px) {\n    &.desktop {\n    }\n  }\n`;\nexport const SelectWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 30px;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    margin-right: 25px;\n  }\n`;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Select, { components } from 'react-select';\nimport { SlArrowDown, SlArrowUp } from 'react-icons/sl';\nimport { getSummary } from '../../redux/operations';\nimport {\n  DashboardContainer,\n  SelectContainer,\n  SelectWrapper,\n} from './StatisticsDashboard.styled';\n\nconst StatisticsDashboard = () => {\n  // Initialize current month and year\n  const currentMonth = new Date().getMonth() + 1;\n  const currentYear = new Date().getFullYear();\n\n  // Generate an array of months and years\n  const months = Array.from({ length: 12 }, (_, i) => i + 1);\n  const startingYear = 2020;\n  const years = Array.from(\n    { length: currentYear - startingYear + 1 },\n    (_, i) => startingYear + i\n  );\n\n  const [selectedMonth, setSelectedMonth] = useState(currentMonth);\n  const [selectedYear, setSelectedYear] = useState(currentYear);\n  const dispatch = useDispatch();\n\n  // Event handlers for month and year selection\n  const handleMonthChange = selectedOption => {\n    setSelectedMonth(selectedOption.value);\n    dispatch(getSummary({ month: selectedOption.value, year: selectedYear }));\n  };\n  const handleYearChange = selectedOption => {\n    setSelectedYear(selectedOption.value);\n    dispatch(getSummary({ month: selectedMonth, year: selectedOption.value }));\n  };\n\n  // Fetch summary data when selected month or year changes\n  useEffect(() => {\n    dispatch(getSummary({ month: selectedMonth, year: selectedYear }));\n  }, [dispatch, selectedMonth, selectedYear]);\n\n  const selectStyle = {\n    container: styles => ({\n      ...styles,\n      fontFamily: \"'Poppins-Regular', sans-serif\",\n      width: '280px',\n      height: '50px',\n      paddingLeft: '16px',\n      cursor: 'pointer',\n      appearance: 'none',\n      '@media (min-width: 768px)': {\n        width: '215px',\n        padding: '10px',\n        paddingRight: '0px',\n      },\n    }),\n    control: styles => ({\n      ...styles,\n      backgroundColor: 'rgba(74, 86, 226, 0.1)',\n      border: '1px solid white',\n      borderRadius: '8px',\n      cursor: 'pointer',\n      height: '50px',\n      marginBottom: '-6px',\n      outline: 'none',\n      paddingRight: '13px',\n    }),\n\n    singleValue: styles => ({\n      ...styles,\n      color: '#FBFBFB',\n      fontSize: '16px',\n    }),\n    placeholder: styles => ({\n      ...styles,\n      color: 'white',\n      fontSize: '16px',\n    }),\n    menu: styles => ({\n      ...styles,\n      borderRadius: '8px',\n      backgroundColor: 'white',\n      background:\n        'linear-gradient(0deg, rgba(83, 61, 186, 0.70) 0%, rgba(80, 48, 154, 0.70) 43.14%, rgba(106, 70, 165, 0.52) 73.27%, rgba(133, 93, 175, 0.13) 120.03%)',\n      boxShadow: '0px 4px 60px 0px rgba(0, 0, 0, 0.25)',\n      backdropFilter: 'blur(50px)',\n      color: '#FBFBFB',\n      fontFamily: \"'Poppins-Regular', sans-serif\",\n      fontSize: '16px',\n      fontWeight: '400',\n      overflow: 'hidden',\n    }),\n    option: (styles, { isFocused, isSelected }) => {\n      if (isFocused) {\n        return {\n          ...styles,\n          background: '#FFFFFF1A',\n          color: '#FF868D',\n        };\n      } else if (isSelected) {\n        return {\n          ...styles,\n          background: 'transparent',\n        };\n      } else {\n        return {\n          ...styles,\n        };\n      }\n    },\n    menuList: base => ({\n      ...base,\n      '&::-webkit-scrollbar': {\n        width: '6px',\n      },\n      '&::-webkit-scrollbar-track': {\n        background: 'transparent',\n      },\n      '&::-webkit-scrollbar-thumb': {\n        background: '#BFB4DD',\n        borderRadius: '12px',\n      },\n    }),\n  };\n  useEffect(() => {\n    const separators = document.getElementsByClassName(\n      'css-1u9des2-indicatorSeparator'\n    );\n    if (separators && separators.length > 0) {\n      Array.from(separators).forEach(separator => {\n        separator.style.display = 'none';\n      });\n    }\n  }, []);\n\n  const DropdownIndicator = props => {\n    return (\n      <components.DropdownIndicator {...props}>\n        {props.selectProps.menuIsOpen ? (\n          <SlArrowUp size={18} label=\"Arrow up\" color={'var(--white)'} />\n        ) : (\n          <SlArrowDown size={18} label=\"Arrow down\" color={'var(--white)'} />\n        )}\n      </components.DropdownIndicator>\n    );\n  };\n\n  return (\n    <DashboardContainer>\n      <SelectWrapper>\n        <SelectContainer>\n          <Select\n            styles={selectStyle}\n            options={months.map(month => ({\n              value: month,\n              label: new Date(0, month - 1).toLocaleString('default', {\n                month: 'long',\n              }),\n            }))}\n            value={months.find(month => month.value === selectedMonth)}\n            onChange={handleMonthChange}\n            components={{ DropdownIndicator }}\n            isSearchable={false}\n            placeholder={new Date().toLocaleString('default', {\n              month: 'long',\n            })}\n          />\n        </SelectContainer>\n\n        <SelectContainer>\n          <Select\n            options={years.map(year => ({\n              value: year,\n              label: year.toString(),\n            }))}\n            value={years.find(year => year.value === selectedYear)}\n            onChange={handleYearChange}\n            styles={selectStyle}\n            components={{ DropdownIndicator }}\n            isSearchable={false}\n            placeholder={currentYear}\n          />\n        </SelectContainer>\n      </SelectWrapper>\n    </DashboardContainer>\n  );\n};\n\nexport default StatisticsDashboard;\n","import styled from 'styled-components';\n\nexport const StatisticsTableContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  align-items: center;\n  @media (min-width: 768px) {\n    margin-right: 20px;\n  }\n  @media (min-width: 1280px) {\n    margin-right: 0px;\n  }\n`;\n\nexport const StatisticsInfo = styled.div`\n  width: 267px;\n  height: 56px;\n  display: flex;\n  margin-left: 5px;\n  align-items: center;\n  justify-content: space-evenly;\n  gap: 108px;\n  border-radius: 8px;\n  box-shadow: 0 4px 60px 0 rgba(0, 0, 0, 0.25);\n  background: rgba(82, 59, 126, 0.6);\n  font-family: 'Poppins', sans-serif;\n  font-weight: 600;\n  font-size: 16px;\n  color: #fbfbfb;\n  margin-top: 5px;\n\n  @media (min-width: 768px) {\n    width: 427px;\n    gap: 206px;\n    margin-right: 13px;\n  }\n`;\n\nexport const CategoryContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 18px;\n  width: 100%;\n\n  padding-top: 20px;\n  padding-bottom: 15px;\n  margin-top: 10px;\n\n  border-bottom: 2px solid rgba(217, 209, 209, 0.3);\n  @media (min-width: 768px) {\n    gap: 25px;\n  }\n  @media (min-width: 1280x) {\n    margin-left: 10px;\n  }\n`;\nexport const DataContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const ListContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  overflow-y: auto;\n  max-height: 200px;\n\n  /* Scrollbar styling */\n  &::-webkit-scrollbar {\n    width: 8px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: #f1f1f1;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: #888;\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background: #555;\n  }\n`;\n\nexport const Expenses = styled.div`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 600;\n  font-size: 14px;\n  color: #fbfbfb;\n  display: flex;\n  align-items: center;\n  padding: 16px 10px 3px;\n  width: 73%;\n\n  @media (min-width: 768px) {\n    padding-top: 10px;\n    width: 85%;\n    gap: 125px;\n  }\n`;\n\nexport const Income = styled.div`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 600;\n  font-size: 14px;\n  color: #fbfbfb;\n  display: flex;\n  align-items: center;\n  padding: 16px 28px 3px;\n\n  width: 73%;\n\n  @media (min-width: 768px) {\n    width: 85%;\n    gap: 240px;\n  }\n`;\n\nexport const CategoryName = styled.div`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  color: #fbfbfb;\n  padding-right: 50px;\n  flex: 1;\n  @media (min-width: 768px) {\n    padding-right: 137px;\n  }\n`;\n\nexport const CategoryTotal = styled.div`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 400;\n  font-size: 14px;\n  width: 100px;\n  text-align: right;\n  color: #fbfbfb;\n  padding-right: 10px;\n\n  @media (min-width: 768px) {\n    padding-right: 20px;\n  }\n`;\n\nexport const NoTransactionsText = styled.div`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 600;\n  font-size: 14px;\n  color: #fbfbfb;\n  text-align: center;\n  padding-top: 20px;\n  overflow: hidden;\n`;\n\nexport const ExpensesSum = styled.div`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 600;\n  font-size: 14px;\n  text-align: right;\n  color: #ff868d;\n\n  flex: 1;\n`;\n\nexport const IncomeSum = styled.div`\n  font-family: 'Poppins', sans-serif;\n  font-weight: 600;\n  font-size: 14px;\n  text-align: right;\n  color: #ffb627;\n\n  flex: 1;\n`;\n\nexport const Rectangle = styled.div`\n  border-radius: 2px;\n  width: 24px;\n  height: 24px;\n`;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { coloredCategoriesMap } from 'components/Chart/Chart';\nimport { getSummary, getCategories } from '../../redux/operations.js';\nimport { selectSummary } from '../../redux/selectors';\nimport {\n  CategoryContainer,\n  CategoryName,\n  CategoryTotal,\n  DataContainer,\n  Expenses,\n  ExpensesSum,\n  Income,\n  IncomeSum,\n  NoTransactionsText,\n  Rectangle,\n  StatisticsInfo,\n  StatisticsTableContainer,\n  ListContainer,\n} from './StatisticsTable.styled.js';\n\nexport const formatNumber = number => {\n  if (isNaN(number)) {\n    return '0.00';\n  }\n  return Math.abs(number)\n    .toFixed(2)\n    .replace(/\\d(?=(\\d{3})+\\.)/g, '$& ');\n};\n\nconst StatisticsTable = () => {\n  // This text is used only for example\n  // const placeholderText = [\n  //   { name: 'Category 1', total: 10990, color: '#ff0000' },\n  //   { name: 'Category 2', total: 22222200, color: '#40ff00' },\n  //   { name: 'Category 3', total: 300, color: '#8000ff' },\n  //   { name: 'Category 4', total: 100, color: '#ff0000' },\n  //   { name: 'Category 5', total: 200, color: '#40ff00' },\n  //   { name: 'Category 3', total: 300, color: '#8000ff' },\n  // ];\n\n  const summary = useSelector(selectSummary);\n  const dispatch = useDispatch();\n\n  const currentMonth = new Date().getMonth() + 1;\n  const currentYear = new Date().getFullYear();\n\n  useEffect(() => {\n    dispatch(getSummary({ month: currentMonth, year: currentYear }));\n    dispatch(getCategories());\n  }, [dispatch, currentMonth, currentYear]);\n\n  const periodSummary = summary.categoriesSummary\n    ? summary.categoriesSummary\n        .filter(category => category.type === 'EXPENSE')\n        .map(category => ({\n          ...category,\n          color: coloredCategoriesMap.get(category.name),\n        }))\n        .sort((a, b) => a.total - b.total)\n    : [];\n\n  return (\n    <StatisticsTableContainer>\n      <StatisticsInfo>\n        <p className=\"category\">Category</p>\n        <p className=\"sum\">Sum</p>\n      </StatisticsInfo>\n      <ListContainer>\n        {periodSummary.length ? (\n          periodSummary.map((category, index) => (\n            <div key={index}>\n              <DataContainer>\n                <CategoryContainer>\n                  <Rectangle style={{ backgroundColor: category.color }} />\n                  <CategoryName>{category.name}</CategoryName>\n                  <CategoryTotal>{formatNumber(category.total)}</CategoryTotal>\n                </CategoryContainer>\n              </DataContainer>\n            </div>\n          ))\n        ) : (\n          <div>\n            {/* {placeholderText.map((category, index) => (\n              <div key={index}>\n                <DataContainer>\n                  <CategoryContainer>\n                    <Rectangle style={{ backgroundColor: category.color }} />\n                    <CategoryName>{category.name}</CategoryName>\n                    <CategoryTotal>\n                      {formatNumber(category.total)}\n                    </CategoryTotal>\n                  </CategoryContainer>\n                </DataContainer>\n              </div>\n            ))} */}\n            <div>\n              <NoTransactionsText>\n                You don't have any transactions in this period\n              </NoTransactionsText>\n            </div>\n          </div>\n        )}\n      </ListContainer>\n\n      <Expenses>\n        <h3>Expenses:</h3>\n        <ExpensesSum>{formatNumber(summary.expenseSummary)}</ExpensesSum>\n      </Expenses>\n      <Income>\n        <h3>Income:</h3>\n        <IncomeSum>{formatNumber(summary.incomeSummary)}</IncomeSum>\n      </Income>\n    </StatisticsTableContainer>\n  );\n};\n\nexport default StatisticsTable;\n","import styled from 'styled-components';\nimport { StyledContainer } from '../../styles/GlobalStyles';\n\nexport const StatisticsPageContainer = styled.div`\n  background: linear-gradient(207deg, #341fa0 44.63%, #652392 88.57%);\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  padding: 10px;\n  align-items: center;\n  height: auto;\n\n  @media (min-width: 768px) {\n    flex-direction: row;\n    gap: 20px;\n  }\n`;\n\nexport const StatisticCard = styled.div`\n  background: #ffffff;\n  border-radius: 10px;\n  padding: 20px;\n  box-shadow: 0px 4px 20px rgba(0, 0, 0, 0.1);\n  width: 100%;\n  max-width: 320px;\n\n  @media (min-width: 768px) {\n    width: auto;\n  }\n`;\n\nexport const StyledStatisticDivMain = styled(StyledContainer)`\n  color: white;\n  display: block;\n  position: relative;\n\n  @media only screen and (min-width: 768px) {\n    display: flex;\n    margin: 0;\n    justify-content: space-between;\n\n    max-width: 100%;\n    height: 720px;\n  }\n  @media only screen and (min-width: 1280px) {\n    max-width: 803px;\n    height: calc(100vh - 70px);\n\n    padding: 20px 20px 0 0;\n  }\n`;\nexport const StyledStatisticDivChart = styled.div`\n  position: relative;\n  width: 280px;\n  padding: 16px 0;\n  margin: 0 auto;\n  @media only screen and (min-width: 768px) {\n    width: 336px;\n    padding: 0;\n    margin: 0;\n  }\n  @media only screen and (min-width: 1280px) {\n    width: 288px;\n  }\n`;\nexport const StyledStatisticTitle = styled.h2`\n  color: ${({ theme }) => theme.colors.mainWhite};\n  text-align: left;\n  font-size: 30px;\n  font-weight: 400;\n  max-width: 280px;\n`;\n","import Chart from '../../components/Chart/Chart';\nimport StatisticsDashboard from 'components/StatisticsDashboard/StatisticsDashboard';\nimport StatisticsTable from '../../components/StatisticsTable/StatisticsTable';\nimport { StatisticsPageContainer } from './StatisticsTab.styled';\n\nconst StatisticsTab = () => {\n  return (\n    <StatisticsPageContainer>\n      <Chart />\n      <div>\n        <StatisticsDashboard />\n        <StatisticsTable />\n      </div>\n    </StatisticsPageContainer>\n  );\n};\nexport default StatisticsTab;\n"],"names":["ChartContainer","styled","_templateObject","_taggedTemplateLiteral","StatisticsTitle","_templateObject2","ChartWrapper","_templateObject3","ExpenseTotal","_templateObject4","_templateObject5","ChartJS","_toConsumableArray","registerables","coloredCategoriesMap","Map","Chart","summary","useSelector","selectSummary","periodSummary","categoriesSummary","filter","category","type","map","_objectSpread","color","name","sort","a","b","total","data","datasets","expense","backgroundColor","boxShadow","expenseTotal","expenseSummary","_jsx","_Fragment","children","_jsxs","Doughnut","length","borderWidth","options","cutout","plugins","legend","display","maintainAspectRatio","responsive","toFixed","DashboardContainer","SelectContainer","SelectWrapper","currentMonth","Date","getMonth","currentYear","getFullYear","months","Array","from","_","i","years","_useState","useState","_useState2","_slicedToArray","selectedMonth","setSelectedMonth","_useState3","_useState4","selectedYear","setSelectedYear","dispatch","useDispatch","useEffect","getSummary","month","year","selectStyle","container","styles","fontFamily","width","height","paddingLeft","cursor","appearance","padding","paddingRight","control","border","borderRadius","marginBottom","outline","singleValue","fontSize","placeholder","menu","background","backdropFilter","fontWeight","overflow","option","_ref","isFocused","isSelected","menuList","base","separators","document","getElementsByClassName","forEach","separator","style","DropdownIndicator","props","components","selectProps","menuIsOpen","SlArrowUp","size","label","SlArrowDown","Select","value","toLocaleString","find","onChange","selectedOption","isSearchable","toString","StatisticsTableContainer","StatisticsInfo","CategoryContainer","DataContainer","ListContainer","Expenses","_templateObject6","Income","_templateObject7","CategoryName","_templateObject8","CategoryTotal","_templateObject9","NoTransactionsText","_templateObject10","ExpensesSum","_templateObject11","IncomeSum","_templateObject12","Rectangle","_templateObject13","formatNumber","number","isNaN","Math","abs","replace","getCategories","get","className","index","incomeSummary","StatisticsPageContainer","StyledContainer","theme","colors","mainWhite","StatisticsDashboard","StatisticsTable"],"sourceRoot":""}