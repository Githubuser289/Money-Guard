{"version":3,"file":"static/js/215.44f523de.chunk.js","mappings":"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","sources":["webpack://react-team-project/./src/components/Chart/Chart.module.css?6073","components/Chart/Chart.jsx","webpack://react-team-project/./src/pages/StatisticsTab/StatisticsTab.module.css?ffaa","webpack://react-team-project/./src/components/StatisticsDashboard/StatisticsDashboard.module.css?3242","components/StatisticsDashboard/StatisticsDashboard.jsx","webpack://react-team-project/./src/components/StatisticsTable/StatisticsTable.module.css?1a22","components/StatisticsTable/StatisticsTable.jsx","pages/StatisticsTab/StatisticsTab.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"chartContainer\":\"Chart_chartContainer__tWEJk\",\"chart\":\"Chart_chart__KWi2v\",\"expenseSummary\":\"Chart_expenseSummary__tOyf4\",\"statisticsTitle\":\"Chart_statisticsTitle__sMQfP\",\"expenseTotal\":\"Chart_expenseTotal__OmYVx\"};","import { Chart as ChartJS, registerables } from 'chart.js';\nimport { Doughnut } from 'react-chartjs-2';\nimport { useSelector } from 'react-redux';\nimport styles from './Chart.module.css';\nimport { selectSummary } from '../../redux/selectors';\n\nChartJS.register(...registerables);\n\nexport const coloredCategoriesMap = new Map([\n  ['Entertainment', '#ff85d2'],\n  ['Car', 'rgb(255, 104, 109)'],\n  ['Products', 'rgb(255, 157, 137)'],\n  ['Main expenses', 'rgb(254, 208, 87)'],\n  ['Leisure', 'rgb(91, 255, 167)'],\n  ['Other expenses', 'rgb(0, 173, 95)'],\n  ['Education', 'rgb(115, 222, 255)'],\n  ['Self care', 'rgb(170, 154, 255)'],\n  ['Child care', 'rgb(87, 101, 255)'],\n  ['Household products', 'rgb(114, 61, 239)'],\n]);\n\nexport default function Chart() {\n  const summary = useSelector(selectSummary);\n\n  const periodSummary = summary.categoriesSummary\n    ? summary.categoriesSummary\n        .filter(category => category.type === 'EXPENSE')\n        .map(category => ({\n          ...category,\n          color: coloredCategoriesMap[category.name] || '#000000',\n        }))\n        .sort((a, b) => a.total - b.total)\n    : [];\n  const data = {\n    datasets: [\n      {\n        data: periodSummary.map(expense => expense.total),\n        backgroundColor: periodSummary.map(expense => expense.color),\n        boxShadow: '0px 0px 8px 0px #000 inset',\n      },\n    ],\n  };\n\n  const noData = {\n    datasets: [\n      {\n        data: [0.0000000001],\n        backgroundColor: ['rgba(200, 200, 200, 0.5)'],\n        borderWidth: 0,\n      },\n    ],\n  };\n  const options = {\n    cutout: '70%',\n    plugins: {\n      legend: {\n        display: false,\n      },\n    },\n    maintainAspectRatio: false,\n    responsive: true,\n  };\n\n  const expenseTotal = summary.expenseSummary || 0;\n\n  return (\n    <div>\n      <h2 className={styles.statisticsTitle}>Statistics</h2>\n      <div className={styles.chart}>\n        <Doughnut\n          data={periodSummary.length ? data : noData}\n          options={options}\n        />\n        <div className={styles.expenseTotal}>â‚´ {expenseTotal.toFixed(2)}</div>\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"statisticsPageContainer\":\"StatisticsTab_statisticsPageContainer__Lz9G3\"};","// extracted by mini-css-extract-plugin\nexport default {\"selectInput\":\"StatisticsDashboard_selectInput__KTozW\",\"selectContainer\":\"StatisticsDashboard_selectContainer__YqoA7\"};","import React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport styles from './StatisticsDashboard.module.css';\nimport Select, { components } from 'react-select';\nimport { SlArrowDown, SlArrowUp } from 'react-icons/sl';\nimport { getSummary } from '../../redux/operations';\n\nconst StatisticsDashboard = () => {\n  // Initialize current month and year\n  const currentMonth = new Date().getMonth() + 1;\n  const currentYear = new Date().getFullYear();\n\n  // Generate an array of months and years\n  const months = Array.from({ length: 12 }, (_, i) => i + 1);\n  const startingYear = 2020;\n  const years = Array.from(\n    { length: currentYear - startingYear + 1 },\n    (_, i) => startingYear + i\n  );\n\n  const [selectedMonth, setSelectedMonth] = useState(currentMonth);\n  const [selectedYear, setSelectedYear] = useState(currentYear);\n  const dispatch = useDispatch();\n\n  // Event handlers for month and year selection\n  const handleMonthChange = selectedOption => {\n    setSelectedMonth(selectedOption.value);\n    dispatch(getSummary({ month: selectedOption.value, year: selectedYear }));\n  };\n  const handleYearChange = selectedOption => {\n    setSelectedYear(selectedOption.value);\n    dispatch(getSummary({ month: selectedMonth, year: selectedOption.value }));\n  };\n\n  // Fetch summary data when selected month or year changes\n  useEffect(() => {\n    dispatch(getSummary({ month: selectedMonth, year: selectedYear }));\n  }, [dispatch, selectedMonth, selectedYear]);\n\n  const selectStyle = {\n    container: styles => ({\n      ...styles,\n      fontFamily: \"'Poppins-Regular', sans-serif\",\n    }),\n    control: styles => ({\n      ...styles,\n      backgroundColor: 'rgba(74, 86, 226, 0.1)',\n      border: '1px solid white',\n      borderRadius: '8px',\n      cursor: 'pointer',\n      height: '50px',\n      marginBottom: '-6px',\n      outline: 'none',\n      paddingRight: '13px',\n    }),\n\n    singleValue: styles => ({\n      ...styles,\n      color: '#FBFBFB',\n      fontSize: '16px',\n    }),\n    placeholder: styles => ({\n      ...styles,\n      color: 'white',\n      fontSize: '16px',\n    }),\n    menu: styles => ({\n      ...styles,\n      borderRadius: '8px',\n      backgroundColor: 'white',\n      background:\n        'linear-gradient(0deg, rgba(83, 61, 186, 0.70) 0%, rgba(80, 48, 154, 0.70) 43.14%, rgba(106, 70, 165, 0.52) 73.27%, rgba(133, 93, 175, 0.13) 120.03%)',\n      boxShadow: '0px 4px 60px 0px rgba(0, 0, 0, 0.25)',\n      backdropFilter: 'blur(50px)',\n      color: '#FBFBFB',\n      fontFamily: \"'Poppins-Regular', sans-serif\",\n      fontSize: '16px',\n      fontWeight: '400',\n      overflow: 'hidden',\n    }),\n    option: (styles, { isFocused, isSelected }) => {\n      if (isFocused) {\n        return {\n          ...styles,\n          background: '#FFFFFF1A',\n          color: '#FF868D',\n        };\n      } else if (isSelected) {\n        return {\n          ...styles,\n          background: 'transparent',\n        };\n      } else {\n        return {\n          ...styles,\n        };\n      }\n    },\n    menuList: base => ({\n      ...base,\n      '&::-webkit-scrollbar': {\n        width: '6px',\n      },\n      '&::-webkit-scrollbar-track': {\n        background: 'transparent',\n      },\n      '&::-webkit-scrollbar-thumb': {\n        background: '#BFB4DD',\n        borderRadius: '12px',\n      },\n    }),\n  };\n  useEffect(() => {\n    const separators = document.getElementsByClassName(\n      'css-1u9des2-indicatorSeparator'\n    );\n    if (separators && separators.length > 0) {\n      Array.from(separators).forEach(separator => {\n        separator.style.display = 'none';\n      });\n    }\n  }, []);\n\n  const DropdownIndicator = props => {\n    return (\n      <components.DropdownIndicator {...props}>\n        {props.selectProps.menuIsOpen ? (\n          <SlArrowUp size={18} label=\"Arrow up\" color={'var(--white)'} />\n        ) : (\n          <SlArrowDown size={18} label=\"Arrow down\" color={'var(--white)'} />\n        )}\n      </components.DropdownIndicator>\n    );\n  };\n\n  return (\n    <div>\n      <div className={styles.selectContainer}>\n        <div className={styles.selectWrapper}>\n          <Select\n            className={styles.selectInput}\n            options={months.map(month => ({\n              value: month,\n              label: new Date(0, month - 1).toLocaleString('default', {\n                month: 'long',\n              }),\n            }))}\n            value={months.find(month => month.value === selectedMonth)}\n            onChange={handleMonthChange}\n            styles={selectStyle}\n            components={{ DropdownIndicator }}\n            isSearchable={false}\n            placeholder={new Date().toLocaleString('default', {\n              month: 'long',\n            })}\n          />\n        </div>\n      </div>\n      <div className={styles.selectContainer}>\n        <div className={styles.selectWrapper}>\n          <Select\n            className={styles.selectInput}\n            options={years.map(year => ({\n              value: year,\n              label: year.toString(),\n            }))}\n            value={years.find(year => year.value === selectedYear)}\n            onChange={handleYearChange}\n            styles={selectStyle}\n            components={{ DropdownIndicator }}\n            isSearchable={false}\n            placeholder={currentYear}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default StatisticsDashboard;\n","// extracted by mini-css-extract-plugin\nexport default {\"StatisticsTableContainer\":\"StatisticsTable_StatisticsTableContainer__gzaHf\",\"statisticsInfo\":\"StatisticsTable_statisticsInfo__FARVQ\",\"category\":\"StatisticsTable_category__BTJKS\",\"sum\":\"StatisticsTable_sum__QzpVc\",\"noTransactionsText\":\"StatisticsTable_noTransactionsText__c8rBo\",\"expenses\":\"StatisticsTable_expenses__q4dk4\",\"income\":\"StatisticsTable_income__FCPus\",\"expensesSum\":\"StatisticsTable_expensesSum__sagAb\",\"incomeSum\":\"StatisticsTable_incomeSum__KwW2t\"};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { coloredCategoriesMap } from 'components/Chart/Chart';\nimport { getSummary, getCategories } from '../../redux/operations.js';\nimport styles from './StatisticsTable.module.css';\nimport { selectSummary } from '../../redux/selectors';\n\nexport const formatNumber = number => {\n  if (isNaN(number)) {\n    return '0.00';\n  }\n  return Math.abs(number)\n    .toFixed(2)\n    .replace(/\\d(?=(\\d{3})+\\.)/g, '$& ');\n};\n\nconst StatisticsTable = () => {\n  const summary = useSelector(selectSummary);\n  const dispatch = useDispatch();\n\n  const currentMonth = new Date().getMonth() + 1;\n  const currentYear = new Date().getFullYear();\n\n  useEffect(() => {\n    dispatch(getSummary({ month: currentMonth, year: currentYear }));\n    dispatch(getCategories());\n  }, [dispatch, currentMonth, currentYear]);\n\n  const periodSummary = summary.categoriesSummary\n    ? summary.categoriesSummary\n        .filter(category => category.type === 'EXPENSE')\n        .map(category => ({\n          ...category,\n          color: coloredCategoriesMap.get(category.name),\n        }))\n        .sort((a, b) => a.total - b.total)\n    : [];\n\n  return (\n    <div className={styles.StatisticsTableContainer}>\n      <div className={styles.statisticsInfo}>\n        <p className={styles.category}>Category</p>\n        <p className={styles.sum}>Sum</p>\n      </div>\n      <div>\n        {periodSummary.length ? (\n          periodSummary.map((category, index) => (\n            <div key={index}>\n              <div>\n                <span />\n                <p>{category.name}</p>\n              </div>\n              <p>{formatNumber(category.total)}</p>\n            </div>\n          ))\n        ) : (\n          <p className={styles.noTransactionsText}>\n            You don't have any transactions in this period\n          </p>\n        )}\n      </div>\n\n      <div className={styles.expenses}>\n        <h3>Expenses:</h3>\n        <p className={styles.expensesSum}>\n          {formatNumber(summary.expenseSummary)}\n        </p>\n      </div>\n      <div className={styles.income}>\n        <h3>Income:</h3>\n        <p className={styles.incomeSum}>\n          {formatNumber(summary.incomeSummary)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default StatisticsTable;\n","import Chart from '../../components/Chart/Chart';\nimport styles from './StatisticsTab.module.css';\nimport StatisticsDashboard from '../../components/StatisticsDashboard/StatisticsDashboard';\nimport StatisticsTable from '../../components/StatisticsTable/StatisticsTable';\n\nconst StatisticsTab = () => {\n  console.log('statisticsTab ');\n  return (\n    <div className={styles.statisticsPageContainer}>\n      <Chart />\n      <StatisticsDashboard />\n      <StatisticsTable />\n    </div>\n  );\n};\nexport default StatisticsTab;\n"],"names":["ChartJS","_toConsumableArray","registerables","coloredCategoriesMap","Map","Chart","summary","useSelector","selectSummary","periodSummary","categoriesSummary","filter","category","type","map","_objectSpread","color","name","sort","a","b","total","data","datasets","expense","backgroundColor","boxShadow","expenseTotal","expenseSummary","_jsxs","children","_jsx","className","styles","Doughnut","length","borderWidth","options","cutout","plugins","legend","display","maintainAspectRatio","responsive","toFixed","currentMonth","Date","getMonth","currentYear","getFullYear","months","Array","from","_","i","years","_useState","useState","_useState2","_slicedToArray","selectedMonth","setSelectedMonth","_useState3","_useState4","selectedYear","setSelectedYear","dispatch","useDispatch","useEffect","getSummary","month","year","selectStyle","container","fontFamily","control","border","borderRadius","cursor","height","marginBottom","outline","paddingRight","singleValue","fontSize","placeholder","menu","background","backdropFilter","fontWeight","overflow","option","_ref","isFocused","isSelected","menuList","base","width","separators","document","getElementsByClassName","forEach","separator","style","DropdownIndicator","props","components","selectProps","menuIsOpen","SlArrowUp","size","label","SlArrowDown","Select","value","toLocaleString","find","onChange","selectedOption","isSearchable","toString","formatNumber","number","isNaN","Math","abs","replace","getCategories","get","index","incomeSummary","console","log","StatisticsDashboard","StatisticsTable"],"sourceRoot":""}