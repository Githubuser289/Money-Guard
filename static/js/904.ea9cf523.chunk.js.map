{"version":3,"file":"static/js/904.ea9cf523.chunk.js","mappings":"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","sources":["../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs"],"sourcesContent":["import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const overflowAvailableHeight = height - overflow[heightSide];\n      const overflowAvailableWidth = width - overflow[widthSide];\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        const maximumClippingWidth = width - overflow.left - overflow.right;\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        const maximumClippingHeight = height - overflow.top - overflow.bottom;\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { detectOverflow, offset } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nconst topLayerSelectors = [':popover-open', ':modal'];\nfunction isTopLayer(floating) {\n  return topLayerSelectors.some(selector => {\n    try {\n      return floating.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const window = getWindow(element);\n  if (!isHTMLElement(element) || isTopLayer(element)) {\n    return window;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      ...(await getDimensionsFn(data.floating))\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 100);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, flip, hide, inline, limitShift, platform, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  const webkit = isWebKit();\n  const css = getComputedStyle(element);\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isWebKit };\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  return {\n    ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n"],"names":["computeCoordsFromPlacement","_ref","placement","rtl","coords","reference","floating","sideAxis","getSideAxis","alignmentAxis","getAlignmentAxis","alignLength","getAxisLength","side","getSide","isVertical","commonX","x","width","commonY","y","height","commonAlign","getAlignment","computePosition","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","config","_config$placement","_config$strategy","strategy","_config$middleware","middleware","platform","validMiddleware","rects","_computeCoordsFromPla","statefulPlacement","middlewareData","resetCount","i","_validMiddleware$i","name","fn","_yield$fn","nextX","nextY","data","reset","_computeCoordsFromPla2","_context","prev","next","filter","Boolean","isRTL","sent","getElementRects","length","initialPlacement","elements","_objectSpread","_defineProperty","t0","abrupt","stop","_x","_x2","_x3","apply","arguments","detectOverflow","_x4","_x5","_detectOverflow","_callee10","state","options","_await$platform$isEle","_evaluate8","_evaluate8$boundary","boundary","_evaluate8$rootBounda","rootBoundary","_evaluate8$elementCon","elementContext","_evaluate8$altBoundar","altBoundary","_evaluate8$padding","padding","paddingObject","altContext","element","clippingClientRect","rect","offsetParent","offsetScale","elementClientRect","_context10","evaluate","getPaddingObject","rectToClientRect","t1","isElement","t2","t3","t4","t5","contextElement","getDocumentElement","t6","t7","t8","t9","t10","getClippingRect","call","t11","getOffsetParent","getScale","t13","t12","t14","convertOffsetParentRelativeRectToViewportRelativeRect","t15","t16","top","bottom","left","right","arrow","_callee2","_objectSpread3","_ref4","_ref3","_ref3$padding","axis","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","max","center","offset","shouldAddOffset","alignmentOffset","_context2","getDimensions","min","clamp","getPlacementList","alignment","autoAlignment","allowedPlacements","concat","_toConsumableArray","getOppositeAlignmentPlacement","autoPlacement","_callee3","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","_evaluate","_evaluate$crossAxis","crossAxis","_evaluate$allowedPlac","_evaluate$autoAlignme","detectOverflowOptions","placements$1","overflow","currentIndex","currentPlacement","alignmentSides","currentOverflows","allOverflows","nextPlacement","placementsSortedByMostSpace","placementsThatFitOnEachSide","resetPlacement","_context3","placements","_objectWithoutProperties","_excluded","undefined","index","getAlignmentSides","overflows","map","d","slice","reduce","acc","v","sort","a","b","every","flip","_callee4","_middlewareData$arrow","_middlewareData$flip","_evaluate2","_evaluate2$mainAxis","checkMainAxis","_evaluate2$crossAxis","checkCrossAxis","specifiedFallbackPlacements","_evaluate2$fallbackSt","fallbackStrategy","_evaluate2$fallbackAx","fallbackAxisSideDirection","_evaluate2$flipAlignm","flipAlignment","isBasePlacement","fallbackPlacements","overflowsData","_sides","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","_placement","_context4","mainAxis","_excluded2","getOppositePlacement","getExpandedPlacements","push","getOppositeAxisPlacements","sides","getSideOffsets","isAnySideFullyClipped","hide","_callee5","_evaluate3","_evaluate3$strategy","offsets","_overflow","_offsets","_context5","_excluded3","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","getBoundingRect","minX","minY","getRectsByLine","sortedRects","groups","prevRect","inline","_callee6","_evaluate4","_evaluate4$padding","nativeClientRects","clientRects","fallback","getBoundingClientRect","resetRects","_context6","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","Array","getClientRects","from","convertValueToCoords","_x6","_x7","_convertValueToCoords","_callee11","mainAxisMulti","crossAxisMulti","rawValue","_ref6","_context11","includes","_callee7","_middlewareData$offse","diffCoords","_context7","shift","_callee8","_objectSpread4","_evaluate5","_evaluate5$mainAxis","_evaluate5$crossAxis","_evaluate5$limiter","limiter","mainAxisCoord","crossAxisCoord","maxSide","_min","_max","_maxSide","_min2","_max2","limitedCoords","_context8","_excluded4","getOppositeAxis","limitShift","_ref5","_evaluate6","_evaluate6$offset","_evaluate6$mainAxis","_evaluate6$crossAxis","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","size","_callee9","_evaluate7","_evaluate7$apply","_rects$floating","heightSide","widthSide","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","maximumClippingWidth","maximumClippingHeight","xMin","xMax","yMin","yMax","nextDimensions","_context9","_excluded5","getCssDimensions","css","getComputedStyle","parseFloat","hasOffset","isHTMLElement","offsetWidth","offsetHeight","shouldFallback","round","$","unwrapElement","domElement","createCoords","_getCssDimensions","Number","isFinite","noOffsets","getVisualOffsets","win","getWindow","isWebKit","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","frameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","topLayerSelectors","isTopLayer","some","selector","matches","e","getWindowScrollBarX","getNodeScroll","scrollLeft","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","body","ownerDocument","scrollWidth","scrollHeight","scrollTop","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","parentNode","getParentNode","isLastTraversableNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","documentElement","getNodeName","isOverflowElement","offsetRect","getTrueOffsetParent","polyfill","window","isTableElement","isContainingBlock","getContainingBlock","getOffsetParentFn","getDimensionsFn","this","topLayer","elementClippingAncestors","cache","cachedResult","get","result","getOverflowAncestors","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","accRect","_getCssDimensions2","autoUpdate","update","_options","_options$ancestorScro","ancestorScroll","_options$ancestorResi","ancestorResize","_options$elementResiz","elementResize","ResizeObserver","_options$layoutShift","layoutShift","IntersectionObserver","_options$animationFra","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","frameId","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","_element$getBoundingC","rootMargin","floor","isFirstUpdate","handleObserve","observe","entries","ratio","intersectionRatio","setTimeout","observeMove","reobserveFrame","resizeObserver","firstEntry","_slicedToArray","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","autoPlacement$1","shift$1","flip$1","size$1","hide$1","arrow$1","inline$1","limitShift$1","Map","mergedOptions","platformWithCache","computePosition$1","node","isNode","nodeName","toLowerCase","_node$ownerDocument","defaultView","document","value","Node","Element","HTMLElement","isShadowRoot","ShadowRoot","_getComputedStyle","overflowX","overflowY","display","test","webkit","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","pageXOffset","pageYOffset","assignedSlot","host","getNearestOverflowAncestor","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","alignments","Math","oppositeSideMap","oppositeAlignmentMap","start","end","param","split","mainAlignmentSide","oppositePlacement","replace","isStart","lr","rl","getSideList","expandPaddingObject"],"sourceRoot":""}