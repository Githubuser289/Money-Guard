{"version":3,"file":"static/js/528.2044210b.chunk.js","mappings":"0MAKaA,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,UAAW,E,SC+C/D,EAnCsB,WAEpB,IAAIC,GAAeC,EAAAA,EAAAA,IAAYL,GAE/B,OACEM,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SAGIJ,GAMAE,EAAAA,EAAAA,KAACG,EAAAA,GAAM,KALPC,EAAAA,EAAAA,MAAA,OAAAF,SAAA,EACEF,EAAAA,EAAAA,KAAA,OAAAE,SAAK,0BACLF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,6BAsBb,C","sources":["redux/selectors.js","pages/DashboardPage/DashboardPage.jsx"],"sourcesContent":["// import { createSelector } from '@reduxjs/toolkit';\n\n/** AUTH selectors */\nexport const selectIsRegistered = state => state.auth.isRegistered;\n\nexport const selectIsLoggedIn = state => state.auth.isLoggedIn;\n\nexport const selectGetInfoPending = state => state.auth.getInfoPending;\n\nexport const selectUser = state => state.auth.user;\n\nexport const selectAuthError = state => state.auth.error;\n\n/** transactions selectors */\nexport const selectTransactions = state => state.transactions.transactions;\n\nexport const selectCategories = state => state.transactions.categories;\n\nexport const selectSummary = state => state.transactions.summary;\n\nexport const selectExchangeData = state => state.transactions.exchangeData;\n\nexport const selectIsLoading = state => state.transactions.isLoading;\n","// import Balance from 'components/Balance/Balance';\n// import Currency from 'components/Currency/Currency';\n// import Header from 'components/Header/Header';\n// import Navigation from 'components/Navigation/Navigation';\n// import Loader from 'components/Loader/Loader';\n// import ScrollButton from 'components/ScrollButton/ScrollButton';\nimport React from 'react'; // , { Suspense }\nimport { Outlet } from 'react-router-dom';\n// import { useMediaQuery } from 'react-responsive';\n// import {\n//   StyledDashBoardBox,\n//   StyledDashBoardContainer,\n//   StyledDeskContainer,\n// } from './DashboardPage.styled';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoggedIn } from '../../redux/selectors';\n\nconst DashboardPage = () => {\n  // const isTablet = useMediaQuery({ query: '(min-width: 768px)' });\n  let userIsLogged = useSelector(selectIsLoggedIn);\n  // userIsLogged = true;\n  return (\n    <>\n      {/* if user is not logged in, display LogIn modal*/}\n      {/* else go to Home page */}\n      {!userIsLogged ? (\n        <div>\n          <div>fundalul cu imaginea</div>\n          <p>modal Login/Register</p>\n        </div>\n      ) : (\n        <Outlet />\n      )}\n\n      {/* <Header />\n      <StyledDeskContainer>\n        <StyledDashBoardContainer>\n          <StyledDashBoardBox>\n            <Navigation />\n            <Balance />\n          </StyledDashBoardBox>\n          {isTablet && <Currency />}\n        </StyledDashBoardContainer>\n        <Suspense fallback={<Loader />}>\n          <Outlet />\n        </Suspense>\n        <ScrollButton />\n      </StyledDeskContainer> */}\n    </>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["selectIsLoggedIn","state","auth","isLoggedIn","userIsLogged","useSelector","_jsx","_Fragment","children","Outlet","_jsxs"],"sourceRoot":""}